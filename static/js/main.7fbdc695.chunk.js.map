{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","components/ContactList/ContactList.module.css","components/AddContactForm/AddContactForm.module.css","context/ThemeContext.js","hoc/withTheme.js","components/ThemeToogler/ThemeToogler.js","components/Layout/Layout.js","redux/contacs/contactsActions.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/AddContactForm/AddContactForm.js","components/Filter/Filter.js","redux/contacs/contactsReducer.js","redux/store.js","index.js","components/App.js"],"names":["module","exports","Context","createContext","themeConfig","light","headerBg","fontColor","bodybg","layoutbg","dark","ThemeContext","toggleTheme","themeKind","state","themeType","setState","theme","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","className","type","checked","onChange","styles","wrapper","style","background","container","color","addContact","createAction","name","number","payload","contact","id","uuid","removeContact","changeFilter","connect","ownProps","item","contacts","items","find","dispatch","onRemove","contactsActions","listItem","nameLine","listItemBtn","onClick","normalizedFilter","filter","toLowerCase","includes","list","map","key","AddContactForm","handleChange","e","target","handleSubmit","preventDefault","onAddContact","submitForm","onSubmit","formLabel","autoComplete","formInput","formButton","mapDispatchToProps","onChangeFilter","title","filterLabel","filterInput","createReducer","contacsActions","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fbdc695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2Ub35\",\"nameLine\":\"ContactListItem_nameLine__2EYAe\",\"listItemBtn\":\"ContactListItem_listItemBtn__2lGut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1un-k\",\"filterInput\":\"Filter_filterInput__3TLSN input_input__cvDM7\",\"title\":\"Filter_title__3mShP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__1Kosh\",\"container\":\"Layout_container__3T5lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__y-NH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitForm\":\"AddContactForm_submitForm__1ykNY\",\"formLabel\":\"AddContactForm_formLabel__39ddC\",\"formInput\":\"AddContactForm_formInput__22dxf input_input__cvDM7\",\"formButton\":\"AddContactForm_formButton__2_xJT\"};","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\n const themeConfig = {\r\n  light: {\r\n    headerBg: \"#F7B30C\",\r\n    fontColor: \"black\",\r\n    bodybg: \"#ebe3fc\",\r\n    layoutbg: \"white\"\r\n  },\r\n  dark: {\r\n    headerBg: \"#3c3c3c\",\r\n    fontColor: \"white\",\r\n    bodybg: \"black\",\r\n    layoutbg: \"#1a181c\"\r\n  }\r\n};\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    const themeKind = this.state.themeType === \"dark\" ? \"light\" : \"dark\";\r\n    this.setState({\r\n      themeType: themeKind,\r\n      theme: themeConfig[themeKind]\r\n    });\r\n  };\r\n\r\n  state = {\r\n    themeType: \"light\",\r\n    theme: themeConfig.light,\r\n    toggleTheme: this.toggleTheme  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext'\r\n\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function withTheme(props) {\r\n    return(\r\n      <ThemeContext.Consumer>\r\n        {value => <WrappedComponent {...props} {...value}/>}\r\n      </ThemeContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme;","import React from 'react';\r\nimport withTheme from '../../hoc/withTheme'\r\n\r\n\r\nconst  ThemeToogler = ({themeType, toggleTheme})  => (\r\n  <div className=\"theme-selector\">\r\n    <span className=\"label\">Toogle theme({themeType})</span>\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" checked={themeType === 'light'} onChange={toggleTheme} />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  </div>\r\n)\r\n  \r\n  \r\n  \r\n\r\n\r\nexport default withTheme(ThemeToogler);","import React from \"react\";\r\nimport withTheme from '../../hoc/withTheme'\r\nimport ThemeToogler from \"../ThemeToogler/ThemeToogler\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({children, theme}) => {\r\n  return (\r\n    <div  className={styles.wrapper} style={{background: theme.bodybg }} >\r\n      <div className={styles.container} style={{ color: theme.fontColor, background: theme.layoutbg }}>\r\n        <ThemeToogler />\r\n        <h1>Phonebook</h1>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(Layout);\r\n","import { uuid } from \"uuidv4\";\r\nimport { createAction} from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    }\r\n  }\r\n}));\r\nconst removeContact = createAction(\"contacts/remove\")\r\nconst changeFilter = createAction(\"contacts/changeFilter\")\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  changeFilter\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacs/contactsActions\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onRemove }) {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <div className={styles.nameLine}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n      </div>\r\n      <button className={styles.listItemBtn} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id}) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    }).isRequired\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacs/contactsActions\";\r\nimport styles from \"./AddContactForm.module.css\";\r\n\r\n class AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.submitForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact\r\n};\r\nexport default connect(null, mapDispatchToProps)(AddContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacs/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div>\r\n    <h2 className={styles.title}>Contacts</h2>\r\n    <label className={styles.filterLabel}>\r\n      Find contact by name\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n  // onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contacsActions from \"../contacs/contactsActions\";\r\n\r\nconst AddContact = (state, action) => [...state, action.payload.contact];\r\nconst removeContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contacsActions.addContact]: AddContact,\r\n  [contacsActions.removeContact]: removeContact\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contacsActions.changeFilter]: (state, action ) => action.payload\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacs/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport AddContactForm from \"./AddContactForm/AddContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeContext>\r\n      <Layout>\r\n        <AddContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </Layout>\r\n    </ThemeContext>\r\n  );\r\n}\r\n"],"sourceRoot":""}